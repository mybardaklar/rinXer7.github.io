{"version":3,"sources":["base/reset.sass","variables/initial.sass","pxlayer.css","variables/generic.sass","widgets/bottombar.sass","mixins/include-media.scss","mixins/utilities.sass","widgets/tabbar.sass","components/drawer.sass","components/modal.sass","partials/main-body.sass","pages/index.sass"],"names":[],"mappings":"AAAA;EACE,wBC0ByD;ACzB3D;;AAEA;EACE,wBAAyB;AFA3B;;AEGA;EFQE,6BGVmB;UHUnB,qBGVmB;ADMrB;;AAEA;EFQE,iCAIiB;KENjB,0BFMe;MENf,yBFMe;EAfjB,kCAawB;EEJtB,6BFMe;EANf,wBAAsB;EACtB,cAAY;EEAZ,eAAgB;EFOlB,eAAO;EETL,iCFMkB;UELlB,qBFMe;AAGjB;;AAEA;EAEA,WAAM;EADN,eAAM;EACN,UAAM;AACN;;AEJA;EAOE,aAAc;AFOhB;;AEJA;EFUA,8BAAK;EAED,cAAA;AENJ;;AAEA;EFWE,4BGjDoB;EHkDpB,2BAAU;AEPZ;;AAEA;EFME,8BAK2C;AEF7C;;AATA;EACE,wBFUsB;EETtB,UAAW;EFYX,cC5ByD;ED6BzD,eAAe;EACf,eAAe;EERf,QFWS;EANX,SAKS;AETT;;AAEA;EFaE,eAAC;AEXH;;AAEA;EFaE,uCG9Da;UH8Db,+BG9Da;ADmDf;;AFcA;EACE,aAAY;EACZ,cAAe;EEXf,oBAAqB;AFavB;;AEVA;EACE,kBAAmB;AFarB;;AEVA;EFaA,aAAK;AEXL;;AAEA;EFaA,wBAAO;EACL,WCvFS;EDwFT,aChDgB;ECqChB,UAAW;EFab,aAAS;AEXT;;AFcA;EAAA,WAEK;EACD,cAAY;AEZhB;;AFSA;EELE,uBAAwB;AFc1B;;AEXA;EFcE,gBAAS;AEZX;;AAEA;EFcE,kBAAc;EACd,mBAAkB;AEZpB;;AE9GA;EACE,aH6DS;ECoDT,eAAgB;AE/GlB;;AFkHA;EE/GE,WAAA;AFiHF;;AAEA;EGwcI,eAAQ;EHrcV,kBEzHa;AF0Hf;;AAEA;EACE,aE/GW;AFgHb;;AAEA;EAEE,iCE9Ge;EFiHf,oCE9GoB;EAJpB,kCAAO;EFgHP,oBE9GqB;UFgHrB,4BE9GoB;EF6GpB,iBE9GiB;EF+GjB,mBE9GoB;EFgHpB,aE9GE;EF+GF,iBE9GiB;EF4GjB,mBD1IM;EC6IN,OE9GE;AF+GJ;;AAEA;EACE,iBE9Gc;AF+GhB;;AAEA;KAOE,qBEpIC;MFoID,oBEpIC;EFkID,uDE7GU;EF+GV,wBEpIC;EFiID,qBE9Gc;EF6Gd,2BE9GY;EF8GZ,4BE9GY;EF4GZ,QE9GY;UFkHZ,+CE7GU;EF8GV,YE7GI;EFwGJ,ME9GY;EF8GZ,cE9GY;EF8GZ,OE9GY;UFoHZ,gBEpIC;EF+HD,SE9GE;AFoHJ;;AAEA;EAKE,2BE1GE;EF0GF,4BE1GE;EFyGF,eE3Gc;EFwGd,iBI5G4B;AJiH9B;;AAEA;MALE,qBE3GU;EF2GV,wBE3GU;UF2GV,kBE3GU;EF0GV,mBEzIC;EFyID,mBEzIC;EFyID,YEzIC;AFmKH;;AApBA;MAGE,oBEzGY;EFyGZ,uBEzGY;EFuHZ,kCEvGqB;EFyGrB,0BEvGc;EF4Fd,4BErHG;EFmHH,oIEzGa;EFyGb,2EEzGa;EF0Gb,yBEzGkB;EFuGlB,qBEzGY;EAOZ,iBAAA;EFsGA,UI7HA;EJ8HA,WI7HA;UJsHA,sBEzGY;EFqHZ,QEvGS;EFoGT,gBExGc;EF8Gd,SEvGE;EFkGF,iBExGiB;EF+FjB,iBEzGgB;EAYhB,QAAA;UF0GA,0BEvGqB;EFyGrB,kBEvGc;EF8Fd,UI7HA;EJmIA,SEvGE;AF2GJ;;AAEA;EACE,eDtJyD;ACuJ3D;;AAEA;EACE,0BEvGoB;AFwGtB;;AAEA;EACE,SEtGI;EFuGJ,kBEzHC;AF0HH;;AAEA;EACE,iBIvJ4B;EJwJ5B,WE9HC;EF8HD,UE9HC;AF+HH;;AAEA;EAGE,0BEnGiB;EFkGjB,WEnIC;EFkID,iBI5J4B;EJ8J5B,kBEnGiB;EFkGjB,UEnIC;AFqIH;;AAEA;EAME,0BE5NwB;EFwNxB,iBIpK0B;EJmK1B,WEnGM;EFuGN,MEnGI;EFiGJ,iBIpK4B;EJqK5B,KEnGE;EFqGF,kBE5NwB;EFuNxB,UEnGM;AFyGR;;AAEA;EACE,SElGU;EFmGV,iBElGgB;AFmGlB;;AAEA;MACE,mBE9GG;EF+GH,2BIlLO;EJiLP,kBE9GG;MF+GH,cIlLO;UJiLP,WE9GG;AFgHL;;AAEA;MAGE,qBEjGI;MFgGJ,yBEjGqB;MFmGrB,oBEjGc;MFkGd,mBEjGY;EFkGZ,2BEjGc;EF8Fd,wBEjGI;EFgGJ,4BEjGqB;EFoGrB,kBEjGY;EF8FZ,2BEjGqB;EFmGrB,uBEjGc;EFyGd,0BEjGmB;UFwFnB,kBEjGI;EFsGJ,4BEjGa;EFgGb,cEjGc;EFmGd,aEjGW;EFmGX,cDlPU;ECwOV,mBEjGI;EFiGJ,mBEjGI;EFiGJ,YEjGI;MFsGJ,cEjGc;UF6Fd,qBEjGqB;UFoGrB,WEjGY;EFsGZ,WEjGI;UF2FJ,sBEjGc;EF4Gd,eEhGa;EF8Fb,iBEjGgB;EFgGhB,kBEjGmB;EFmGnB,SEhGE;AFkGJ;;AAEA;EACE,eEhGgB;AFiGlB;;AAEA;EACE,wBEhGsB;AFiGxB;;AAEA;EACE,SEhGI;EFiGJ,kBD/LS;ACgMX;;AAEA;EACE,mCDnM8B;UCmM9B,2BDnM8B;ACoMhC;;AAEA;EACE,SE/FI;EFgGJ,kBE/Fc;AFgGhB;;AAEA;EACE,mDE/FyB;EFgGzB,SI/NA;UJ8NA,2CE/FyB;EFiGzB,iBI/NgD;AJgOlD;;AAEA;EKnRI,sBAAa;ELqRf,SAAU;UKrRR,cAAa;EAEf,kBAAU;ALqRZ;;AAEA;EKjRI,0BAAY;EADZ,WAAQ;EADR,iBAAiB;EAEjB,kBAAY;EADZ,UAAQ;ALsRZ;;AAEA;EAME,0BKnSC;EAAA,iBAAA;EL8RD,WKnRI;ELuRJ,MKjRM;EL+QN,iBKlRoB;ELmRpB,KKjSC;ELmSD,kBKnSC;EL8RD,UKnRI;ALyRN;;AAEA;EACE,SIzPA;EJ0PA,iBIzP4B;AJ0P9B;;AAEA;EAcE,0BAAqB;EADrB,iBIzQgD;EJuQhD,WK9RG;ELyRH,UKhRY;ELoRZ,UKhRM;EL+QN,QKhRU;ELqRV,kBAAqB;EATrB,SKhRY;ACtCd;;ANkUA;MAfE,qBKrQsC;MLsQtC,oBKtRG;ELqRH,wBKrQsC;ELsQtC,uBKtRG;ULqRH,kBKrQsC;ELuQtC,wBKhRiB;ELwRjB,UIzQA;EJ8PA,0BKjRgB;ELiRhB,0BKjRgB;ELiRhB,mBKjRgB;ULmRhB,sBKtRG;EL0RH,iBKhRgB;ELiRhB,SKhRY;AL0Sd;;AAjBA;EAaE,kCM7TuB;EARvB,qBAAQ;ENwUR,iBM5TY;ENuTZ,WM7TS;EAIT,gBAAQ;ENqTR,WM7TE;ENkUF,QM7TE;ENyTF,iBM7TY;UNkUZ,0BM7TuB;ENsTvB,UM7TW;ANwUb;;AAEA;EMvTE,iCAAa;ENiUb,0BM3Te;ENwTf,UM3TE;ENqTF,gBM5TY;EN8TZ,eM5TgB;ENiUhB,MM3TO;ENwTP,aM3TY;ENwTZ,cM5TE;ENqUF,SM3TE;ENsTF,iBM3TY;EN8TZ,OM3TO;UALP,yBAAa;ENiUb,kBM3Te;EN6Tf,iBM3Tc;AN4ThB;;AAOA;MOzWA,qBAAU;EAAV,wBAAU;UAAV,kBAAU;EACR,mBAAY;EAAZ,mBAAY;EAAZ,YAAY;APiXd;;AATA;MAEE,yBOhWmB;MPkWnB,oBOhWoB;MPkWpB,mBOhWS;EP4VT,4BOhWmB;EPoWnB,kBOhWS;EP4VT,2BOhWmB;EPkWnB,uBOhWoB;EPoWpB,0BOhWqB;EP+VrB,cOhWa;UP2Vb,qBOhWmB;UPoWnB,WOhWS;EP+VT,WOhWQ;UP+VR,sBOhWoB;EPoWpB,kBOhWqB;APiWvB;;AAEA;EACE,eO/VQ;APgWV;;AAEA;EACE,wBO/VoB;APgWtB;;AAEA;EACE,UO9VW;AP+Vb;;AAEA;EACE,SO9VS;EP+VT,iBO9Va;AP+Vf;;AQnYA;EACE,SAAU;ERsYV,kBAAmB;ASvYrB;;AT0YA;ESpYE,aAAA;EADA,WAAA;EAFA,iBAAiB;EACjB,UAAS;AT2YX;;AAEA;ESjYE,0BAIkB;EARlB,iBAAa;EADb,WAAA;EAIA,MAAA;EAFA,iBAAa;EACb,KAAA;EAEA,kBAIkB;EAVpB,UAAK;AT+YL;;AAEA;EACE,SAAU;EStYZ,iBAAQ;ATwYR;;AAEA;EStYE,8BAAkB;EAAlB,sBAAkB;ATwYpB;;AAEA;EStYE,0BVzBQ;EUyBR,kBVzBQ;ACiaV;;AAEA;EStYE,+BAAY;EACZ,0CAAgB;UADhB,uBAAY;EACZ,kCAAgB;ATwYlB;;AAEA;MAEE,mBDzYyD;ECyYzD,sBDzYyD;EUhB3D,mBAmBS;EAnBT,mBAmBS;EAnBT,YAmBS;UTsYP,0BDzYyD;EC8YzD,eSpYQ;ETqYR,iBAAkB;ASnYpB;;ATsYA;ESlaA,MAAO;ET0ZL,iBDvYyD;ECwYzD,KSrYE;ETuYF,USpYE;ATkZJ;;AATA;ES/XE,4FAAU;EAAV,0DAAU;EL9CN,aAAU;EJkbd,WAAU;ESnYV,UAAA;EAFF,SAAQ;ATyYR;;AAEA;EASE,sDSnYkC;ETiYlC,mCDnckD;EUqDpD,sC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","file":"pxlayer.css","sourcesContent":["::-moz-selection {\n  background-color: $selection-background; }\n::selection {\n  background-color: $selection-background; }\n\n* {\n  &,\n  &::before,\n  &::after {\n    box-sizing: border-box; } }\n\nhtml {\n  @if type-of($body-background) == 'color' {\n    background-color: $body-background; }\n  @else {\n    background-image: $body-background; }\n  font-size: $body-font-size;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  text-rendering: $body-text-rendering;\n  text-size-adjust: 100%;\n  overflow-x: auto;\n  overflow-y: auto;\n\n  &.is-any-layer-active {\n    overflow: hidden;\n    size: 100%; } }\n\narticle,\naside,\nfigure,\nfooter,\nheader,\nhgroup,\nsection {\n  display: block; }\n\ninput,\ntextarea,\nselect,\nbutton {\n  font-family: $body-font-family;\n  font-size: 14px; }\n\ncode,\npre {\n  -moz-osx-font-smoothing: auto;\n  -webkit-font-smoothing: auto;\n  font-family: $code-font-family; }\n\nbody {\n  @if type-of($body-background) == 'color' {\n    background-color: $body-background; }\n  @else {\n    background-image: $body-background; }\n  color: $body-text-color;\n  font-family: $body-font-family;\n  font-size: 1rem;\n  font-weight: $body-font-weight;\n  line-height: $body-line-height;\n  padding: 0;\n  margin: 0;\n\n  &.is-any-layer-active {\n    overflow: hidden;\n    > * {\n      filter: blur(5px) grayscale(90%); } } }\n\na {\n  color: $link-color;\n  cursor: pointer;\n  text-decoration: none;\n\n  strong {\n    color: currentColor; }\n\n  &:hover {\n    color: $link-color-hover; } }\n\nhr {\n  background-color: $hr-background-color;\n  border: none;\n  display: block;\n  height: $hr-height;\n  margin: $hr-margin; }\n\nimg {\n  height: auto;\n  max-width: 100%; }\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  vertical-align: baseline; }\n\nsmall {\n  font-size: 0.875em; }\n\nspan {\n  font-style: inherit;\n  font-weight: inherit; }\n\nstrong {\n  color: $strong-color;\n  font-weight: $strong-weight; }\n\nfieldset {\n  border: none; }\n\ntable {\n  td,\n  th {\n    text-align: left;\n    vertical-align: top; }\n\n  th {\n    color: $strong-color; } }\n\n.pxlicon {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  display: inline-block;\n  font-style: normal;\n  font-variant: normal;\n  text-rendering: auto;\n  line-height: 1;\n  position: relative;\n  top: 1px; }\n","// Colors\n$black: #2d3436 !default;\n$white: #fff !default;\n$color-1: #d63031 !default;\n$color-2: #fdcb6e !default;\n$color-3: #0984e3 !default;\n\n$gray-100: hsl(hue($black), saturation($black), 90%) !default;\n$gray-200: hsl(hue($black), saturation($black), 80%) !default;\n$gray-300: hsl(hue($black), saturation($black), 70%) !default;\n$gray-400: hsl(hue($black), saturation($black), 60%) !default;\n$gray-500: hsl(hue($black), saturation($black), 50%) !default;\n$gray-600: hsl(hue($black), saturation($black), 40%) !default;\n$gray-700: hsl(hue($black), saturation($black), 30%) !default;\n$gray-800: hsl(hue($black), saturation($black), 20%) !default;\n$gray-900: hsl(hue($black), saturation($black), 10%) !default;\n\n$color-1-100: hsl(hue($color-1), saturation($color-1), 90%) !default;\n$color-1-200: hsl(hue($color-1), saturation($color-1), 80%) !default;\n$color-1-300: hsl(hue($color-1), saturation($color-1), 70%) !default;\n$color-1-400: hsl(hue($color-1), saturation($color-1), 60%) !default;\n$color-1-500: hsl(hue($color-1), saturation($color-1), 50%) !default;\n$color-1-600: hsl(hue($color-1), saturation($color-1), 40%) !default;\n$color-1-700: hsl(hue($color-1), saturation($color-1), 30%) !default;\n$color-1-800: hsl(hue($color-1), saturation($color-1), 20%) !default;\n$color-1-900: hsl(hue($color-1), saturation($color-1), 10%) !default;\n\n$color-2-100: hsl(hue($color-2), saturation($color-2), 90%) !default;\n$color-2-200: hsl(hue($color-2), saturation($color-2), 80%) !default;\n$color-2-300: hsl(hue($color-2), saturation($color-2), 70%) !default;\n$color-2-400: hsl(hue($color-2), saturation($color-2), 60%) !default;\n$color-2-500: hsl(hue($color-2), saturation($color-2), 50%) !default;\n$color-2-600: hsl(hue($color-2), saturation($color-2), 40%) !default;\n$color-2-700: hsl(hue($color-2), saturation($color-2), 30%) !default;\n$color-2-800: hsl(hue($color-2), saturation($color-2), 20%) !default;\n$color-2-900: hsl(hue($color-2), saturation($color-2), 10%) !default;\n\n$color-3-100: hsl(hue($color-3), saturation($color-3), 90%) !default;\n$color-3-200: hsl(hue($color-3), saturation($color-3), 80%) !default;\n$color-3-300: hsl(hue($color-3), saturation($color-3), 70%) !default;\n$color-3-400: hsl(hue($color-3), saturation($color-3), 60%) !default;\n$color-3-500: hsl(hue($color-3), saturation($color-3), 50%) !default;\n$color-3-600: hsl(hue($color-3), saturation($color-3), 40%) !default;\n$color-3-700: hsl(hue($color-3), saturation($color-3), 30%) !default;\n$color-3-800: hsl(hue($color-3), saturation($color-3), 20%) !default;\n$color-3-900: hsl(hue($color-3), saturation($color-3), 10%) !default;\n\n// Typography\n$family-sans-serif: 'Poppins', sans-serif !default;\n$family-monospace: monospace !default;\n$family-cursive: 'Charm', cursive !default;\n\n$weight-light: 300 !default;\n$weight-normal: 400 !default;\n$weight-medium: 500 !default;\n$weight-semibold: 600 !default;\n$weight-bold: 700 !default;\n\n// Sizes\n$pixel-288: #{_calcRem(288)}rem !default;\n$pixel-144: #{_calcRem(144)}rem !default;\n$pixel-96: #{_calcRem(96)}rem !default;\n$pixel-72: #{_calcRem(72)}rem !default;\n$pixel-64: #{_calcRem(64)}rem !default;\n$pixel-48: #{_calcRem(48)}rem !default;\n$pixel-36: #{_calcRem(36)}rem !default;\n$pixel-24: #{_calcRem(24)}rem !default;\n$pixel-18: #{_calcRem(18)}rem !default;\n$pixel-16: #{_calcRem(16)}rem !default;\n$pixel-14: #{_calcRem(14)}rem !default;\n$pixel-12: #{_calcRem(12)}rem !default;\n$pixel-10: #{_calcRem(10)}rem !default;\n\n// Z-index\n$z-index-1: 10 !default;\n$z-index-2: 20 !default;\n$z-index-3: 30 !default;\n$z-index-4: 40 !default;\n$z-index-5: 50 !default;\n$z-index-6: 60 !default;\n$z-index-7: 70 !default;\n$z-index-8: 80 !default;\n$z-index-9: 90 !default;\n$z-index-main-content: 2 !default;\n$z-index-main-header: 3 !default;\n$z-index-main-footer: 4 !default;\n\n// Animation\n$transition-easing: ease-out !default;\n$transition-speed: 250ms !default;\n","::-moz-selection {\n  background-color: #feedcd;\n}\n\n::selection {\n  background-color: #feedcd;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\nhtml {\n  background-color: #171b1c;\n  font-size: 16px;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  text-rendering: optimizeLegibility;\n  text-size-adjust: 100%;\n  overflow-x: auto;\n  overflow-y: auto;\n}\n\nhtml.is-any-layer-active {\n  overflow: hidden;\n  size: 100%;\n}\n\narticle,\naside,\nfigure,\nfooter,\nheader,\nhgroup,\nsection {\n  display: block;\n}\n\ninput,\ntextarea,\nselect,\nbutton {\n  font-family: \"Poppins\", sans-serif;\n  font-size: 14px;\n}\n\ncode,\npre {\n  -moz-osx-font-smoothing: auto;\n  -webkit-font-smoothing: auto;\n  font-family: \"Poppins\", sans-serif;\n}\n\nbody {\n  background-color: #171b1c;\n  color: #fff;\n  font-family: \"Poppins\", sans-serif;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  padding: 0;\n  margin: 0;\n}\n\nbody.is-any-layer-active {\n  overflow: hidden;\n}\n\nbody.is-any-layer-active > * {\n  filter: blur(5px) grayscale(90%);\n}\n\na {\n  color: #0a8ff5;\n  cursor: pointer;\n  text-decoration: none;\n}\n\na strong {\n  color: currentColor;\n}\n\na:hover {\n  color: #065693;\n}\n\nhr {\n  background-color: #e3e7e8;\n  border: none;\n  display: block;\n  height: 2px;\n  margin: 1.5rem;\n}\n\nimg {\n  height: auto;\n  max-width: 100%;\n}\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  vertical-align: baseline;\n}\n\nsmall {\n  font-size: 0.875em;\n}\n\nspan {\n  font-style: inherit;\n  font-weight: inherit;\n}\n\nstrong {\n  color: #171b1c;\n  font-weight: 600;\n}\n\nfieldset {\n  border: none;\n}\n\ntable td,\ntable th {\n  text-align: left;\n  vertical-align: top;\n}\n\ntable th {\n  color: #171b1c;\n}\n\n.pxlicon {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  display: inline-block;\n  font-style: normal;\n  font-variant: normal;\n  text-rendering: auto;\n  line-height: 1;\n  position: relative;\n  top: 1px;\n}\n\n.denemeFont {\n  font-size: 2.25rem;\n}\n\n.pxl-bottombar {\n  position: fixed null 0 0 0;\n  z-index: 5;\n  border-top-radius: 14px;\n  background-color: #fff;\n  box-shadow: 0 -5px 15px 0 rgba(255, 255, 255, 0.25);\n  display: none;\n  user-select: none;\n}\n\n.pxl-bottombar__wrapper {\n  position: relative;\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n  border-top-radius: 14px;\n}\n\n.pxl-bottombar__big {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  border: 5px solid #fff;\n  background-image: linear-gradient(to right, #3ba5f7, #0872c4, #0872c4, #3ba5f7);\n  background-size: 300% 100%;\n  background-color: transparent;\n  color: #fff;\n  size: 64px;\n  border-radius: 50%;\n  margin-top: -32px;\n  position: absolute;\n  top: 16px;\n  left: 50%;\n  z-index: 3;\n  transform: translateX(-50%);\n  padding: 0;\n  transition: all 500ms;\n}\n\n.pxl-bottombar__big:focus {\n  outline-width: 0;\n}\n\n.pxl-bottombar__big:active {\n  background-position: 100% 0;\n}\n\n.pxl-bottombar__big:active .pxl-bottombar__big__icon svg:nth-child(2) {\n  opacity: 1;\n  visibility: visible;\n}\n\n.pxl-bottombar__big svg {\n  fill: currentColor;\n  size: 24px;\n}\n\n.pxl-bottombar__big__icon {\n  position: relative;\n  size: 23px;\n  transition: all 500ms;\n}\n\n.pxl-bottombar__big__icon svg {\n  size: 100%;\n  fill: currentColor;\n  position: absolute;\n  top: 0;\n  left: 0;\n  transition: all 500ms;\n}\n\n.pxl-bottombar__big__icon svg.icon-filled {\n  opacity: 0;\n  visibility: hidden;\n}\n\n.pxl-bottombar__seperator {\n  flex-grow: 1;\n  flex-basis: 30%;\n}\n\n.pxl-bottombar__item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  flex-grow: 1;\n  flex-basis: 25%;\n  border-width: 0;\n  background-color: transparent;\n  color: #0a8ff5;\n  height: 60px;\n  cursor: default;\n  transition: all 500ms;\n  position: relative;\n  z-index: 2;\n  overflow: hidden;\n}\n\n.pxl-bottombar__item:focus {\n  outline-width: 0;\n}\n\n.pxl-bottombar__item:active {\n  background-color: #cee9fd;\n}\n\n.pxl-bottombar__item:active .pxl-bottombar__item__icon svg:nth-child(2) {\n  opacity: 1;\n  visibility: visible;\n}\n\n.pxl-bottombar__item.active .pxl-bottombar__item__icon {\n  transform: translateY(-10px);\n}\n\n.pxl-bottombar__item.active .pxl-bottombar__item__icon svg.icon-filled {\n  opacity: 1;\n  visibility: visible;\n}\n\n.pxl-bottombar__item.active .pxl-bottombar__item__notifier {\n  transform: translateY(-7px) translateX(-50%);\n  opacity: 0;\n  visibility: hidden;\n}\n\n.pxl-bottombar__item.active .pxl-bottombar__item__label {\n  transform: none;\n  opacity: 1;\n  visibility: visible;\n}\n\n.pxl-bottombar__item__icon {\n  position: relative;\n  size: 23px;\n  transition: all 500ms;\n}\n\n.pxl-bottombar__item__icon svg {\n  size: 100%;\n  fill: currentColor;\n  position: absolute;\n  top: 0;\n  left: 0;\n  transition: all 500ms;\n}\n\n.pxl-bottombar__item__icon svg.icon-filled {\n  opacity: 0;\n  visibility: hidden;\n}\n\n.pxl-bottombar__item__notifier {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #d52a2b;\n  width: 5px;\n  height: 5px;\n  position: absolute;\n  z-index: 1;\n  top: -5px;\n  right: -5px;\n  font-size: 0;\n  color: #fff;\n  border-radius: 50%;\n  transition: all 500ms;\n}\n\n.pxl-bottombar__item__counter {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #d52a2b;\n  border: 2px solid #fff;\n  width: 16px;\n  height: 16px;\n  text-align: center;\n  position: absolute;\n  z-index: 1;\n  bottom: -8px;\n  left: 50%;\n  transform: translateX(-50%);\n  font-size: 0.75rem;\n  color: #fff;\n  border-radius: 50%;\n}\n\n.pxl-bottombar__item__label {\n  font-size: 0.75rem;\n  margin-top: 5px;\n  font-weight: 500;\n  transform: translateY(7px);\n  line-height: 1;\n  position: absolute;\n  bottom: 7px;\n  left: 0;\n  right: 0;\n  transition: all 500ms;\n  opacity: 0;\n  visibility: hidden;\n}\n\n.pxl-tabbar-triggers {\n  display: flex;\n  align-items: center;\n}\n\n.pxl-tabbar-trigger {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 60px;\n  flex-grow: 1;\n  border-width: 0;\n  transition: all 500ms;\n}\n\n.pxl-tabbar-trigger:focus {\n  outline-width: 0;\n}\n\n.pxl-tabbar-trigger:hover {\n  background-color: #0a8ff5;\n}\n\n.pxl-tabbar-trigger:hover .pxl-tabbar-trigger-icon {\n  color: #fff;\n}\n\n.pxl-tabbar-trigger:hover .pxl-tabbar-trigger-icon .icon-normal {\n  opacity: 0;\n  visibility: hidden;\n}\n\n.pxl-tabbar-trigger:hover .pxl-tabbar-trigger-icon .icon-filled {\n  opacity: 1;\n  visibility: visible;\n}\n\n.pxl-tabbar-trigger-icon {\n  position: relative;\n  width: 25px;\n  height: 25px;\n  color: #0a8ff5;\n}\n\n.pxl-tabbar-trigger-icon > svg {\n  width: 100%;\n  height: 100%;\n  fill: currentColor;\n  position: absolute;\n  top: 0;\n  left: 0;\n  transition: all 500ms;\n}\n\n.pxl-tabbar-trigger-icon > svg .icon-filled {\n  opacity: 0;\n  visibility: hidden;\n}\n\n.pxl-drawer {\n  transition: all 500ms 500ms;\n}\n\n.pxl-drawer.is-active-layer {\n  transition: all 500ms;\n}\n\n.pxl-drawer.is-active-layer .pxl-drawer__container {\n  transform: translateX(0);\n  transition: all 500ms 500ms ease-in-out;\n}\n\n.pxl-drawer__body {\n  display: flex;\n  justify-content: flex-start;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  min-height: 100%;\n  overflow-x: hidden;\n}\n\n.pxl-drawer__away {\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0;\n  size: 100%;\n  z-index: 1;\n  background-image: linear-gradient(to bottom, #8E2DE2, #4A00E0);\n  opacity: .5;\n}\n\n.pxl-drawer__container {\n  position: relative;\n  z-index: 2;\n  background-color: #fff;\n  width: 320px;\n  color: #5d6b6f;\n  padding: 15px;\n  transform: translateX(-100%);\n  transition: all 500ms ease-in-out;\n  box-shadow: 15px 0 30px 0 rgba(45, 52, 54, 0.75);\n}\n\n.pxl-modal {\n  transition: all 500ms;\n}\n\n.pxl-modal.pxl-layer--active .pxl-modal__container,\n.pxl-modal.pxl-layer--behind .pxl-modal__container {\n  transform: translateY(0);\n}\n\n.pxl-modal__body {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 30px;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  min-height: 100%;\n}\n\n.pxl-modal__away {\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0;\n  size: 100%;\n  z-index: 1;\n  background-image: linear-gradient(to bottom, #8E2DE2, #4A00E0);\n  opacity: .15;\n}\n\n.pxl-modal__container {\n  position: relative;\n  z-index: 2;\n  background-color: #fff;\n  width: 600px;\n  color: #5d6b6f;\n  padding: 15px;\n  transform: translateY(-100%);\n  transition: all 500ms;\n}\n\nsection.main-layer {\n  transition: all 350ms;\n}\n\n.container {\n  width: 100%;\n  max-width: 1140px;\n  margin: null auto;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  grid-template-rows: 250px;\n  grid-gap: 30px;\n  height: 600px;\n}\n\n.box {\n  background-color: bisque;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 36px;\n  font-weight: 600;\n}\n\n.box:nth-child(odd) {\n  background-color: blue;\n  color: #fff;\n}\n\n.button {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  appearance: none;\n  background-color: #fff;\n  color: #0984e3;\n  border: 2px solid #0984e3;\n  padding: 10px;\n  line-height: 1;\n  font-size: 16px;\n  margin: 10px;\n  font-weight: 600;\n  cursor: pointer;\n}\n\n.button:hover {\n  background-color: #cee9fd;\n}\n\n.button:focus {\n  background-color: #9dd2fb;\n  color: #0a8ff5;\n  outline-width: 0;\n}\n\n.button svg {\n  margin-right: 7px;\n  fill: currentColor;\n}\n\n.deneme {\n  padding: 50px 75px null;\n  margin: @padding;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.choose {\n  color: red;\n  background-repeat: no-repeat;\n}\n\n.boxes {\n  display: flex;\n  align-items: center;\n  padding: 30px;\n}\n\n.boxes .box {\n  width: 50px;\n  height: 50px;\n}\n\n.boxes .black-box-1 {\n  background-color: #e3e7e8;\n}\n\n.boxes .black-box-2 {\n  background-color: #c7cfd1;\n}\n\n.boxes .black-box-3 {\n  background-color: #acb6b9;\n}\n\n.boxes .black-box-4 {\n  background-color: #909ea2;\n}\n\n.boxes .black-box-5 {\n  background-color: #74868b;\n}\n\n.boxes .black-box-6 {\n  background-color: #5d6b6f;\n}\n\n.boxes .black-box-7 {\n  background-color: #465053;\n}\n\n.boxes .black-box-8 {\n  background-color: #2e3638;\n}\n\n.boxes .black-box-9 {\n  background-color: #171b1c;\n}\n\n.boxes .black-box-10 {\n  background-color: #2d3436;\n}\n\n.boxes .color-1-box-1 {\n  background-color: #f7d4d5;\n}\n\n.boxes .color-1-box-2 {\n  background-color: #eeaaaa;\n}\n\n.boxes .color-1-box-3 {\n  background-color: #e67f80;\n}\n\n.boxes .color-1-box-4 {\n  background-color: #dd5556;\n}\n\n.boxes .color-1-box-5 {\n  background-color: #d52a2b;\n}\n\n.boxes .color-1-box-6 {\n  background-color: #aa2223;\n}\n\n.boxes .color-1-box-7 {\n  background-color: #80191a;\n}\n\n.boxes .color-1-box-8 {\n  background-color: #551111;\n}\n\n.boxes .color-1-box-9 {\n  background-color: #2b0809;\n}\n\n.boxes .color-1-box-10 {\n  background-color: #d63031;\n}\n\n.boxes .color-2-box-1 {\n  background-color: #feedcd;\n}\n\n.boxes .color-2-box-2 {\n  background-color: #fedb9a;\n}\n\n.boxes .color-2-box-3 {\n  background-color: #fdc968;\n}\n\n.boxes .color-2-box-4 {\n  background-color: #fcb736;\n}\n\n.boxes .color-2-box-5 {\n  background-color: #fca503;\n}\n\n.boxes .color-2-box-6 {\n  background-color: #c98403;\n}\n\n.boxes .color-2-box-7 {\n  background-color: #976302;\n}\n\n.boxes .color-2-box-8 {\n  background-color: #654201;\n}\n\n.boxes .color-2-box-9 {\n  background-color: #322101;\n}\n\n.boxes .color-2-box-10 {\n  background-color: #fdcb6e;\n}\n\n.boxes .color-3-box-1 {\n  background-color: #cee9fd;\n}\n\n.boxes .color-3-box-2 {\n  background-color: #9dd2fb;\n}\n\n.boxes .color-3-box-3 {\n  background-color: #6cbcf9;\n}\n\n.boxes .color-3-box-4 {\n  background-color: #3ba5f7;\n}\n\n.boxes .color-3-box-5 {\n  background-color: #0a8ff5;\n}\n\n.boxes .color-3-box-6 {\n  background-color: #0872c4;\n}\n\n.boxes .color-3-box-7 {\n  background-color: #065693;\n}\n\n.boxes .color-3-box-8 {\n  background-color: #043962;\n}\n\n.boxes .color-3-box-9 {\n  background-color: #021d31;\n}\n\n.boxes .color-3-box-10 {\n  background-color: #0984e3;\n}\n\n@media (max-width: 767px) {\n  .pxl-bottombar {\n    display: block;\n  }\n}","// ::selection settings\n$selection-background: $color-2-100;\n\n// <body> settings\n$body-background: $gray-900 !default;\n$body-font-family: $family-sans-serif !default;\n$body-font-size: 16px !default;\n$body-font-weight: $weight-normal !default;\n$body-text-color: $white !default;\n$body-text-rendering: optimizeLegibility !default;\n$body-line-height: 1.5 !default;\n\n// <code> settings\n$code-font-family: $family-sans-serif !default;\n\n// <a> settings\n$link-color: $color-3-500 !default;\n$link-color-hover: $color-3-700 !default;\n\n// <hr> settings\n$hr-background-color: $gray-100 !default;\n$hr-height: 2px !default;\n$hr-margin: $pixel-24 null !default;\n\n// <strong> settings\n$strong-color: $gray-900 !default;\n$strong-weight: $weight-semibold !default;\n","$bottombar-icon-size: 23px;\n$bottombar-background-color: $white;\n\n.denemeFont {\n  font-size: $pixel-36; }\n\n.pxl-bottombar {\n  position: fixed null 0 0 0;\n  z-index: 5;\n  border-top-radius: 14px;\n  background-color: $bottombar-background-color;\n  box-shadow: 0 -5px 15px 0 rgba($white, .25);\n  display: none;\n  user-select: none;\n\n  @include media('<tablet') {\n    display: block; }\n\n  &__wrapper {\n    position: relative;\n    display: flex;\n    align-items: center;\n    overflow: hidden;\n    border-top-radius: 14px; }\n\n  &__big {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    border: 5px solid $bottombar-background-color;\n    background-image: linear-gradient(to right, $color-3-400, $color-3-600, $color-3-600, $color-3-400);\n    background-size: 300% 100%;\n    background-color: transparent;\n    color: $white;\n    size: 64px;\n    border-radius: 50%;\n    margin-top: -32px;\n    position: absolute;\n    top: 16px;\n    left: 50%;\n    z-index: 3;\n    transform: translateX(-50%);\n    padding: 0;\n    transition: all 500ms;\n\n    &:focus {\n      outline-width: 0; }\n\n    &:active {\n      background-position: 100% 0;\n      .pxl-bottombar__big__icon {\n        svg:nth-child(2) {\n          @include visible(true); } } }\n\n    svg {\n      fill: currentColor;\n      size: 24px; }\n\n    &__icon {\n      position: relative;\n      size: $bottombar-icon-size;\n      transition: all 500ms;\n\n      svg {\n        size: 100%;\n        fill: currentColor;\n        position: absolute;\n        top: 0;\n        left: 0;\n        transition: all 500ms;\n\n        &.icon-filled {\n          @include visible(false); } } } }\n\n  &__seperator {\n    flex-grow: 1;\n    flex-basis: 30%; }\n\n  &__item {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    flex-grow: 1;\n    flex-basis: 25%;\n    border-width: 0;\n    background-color: transparent;\n    color: $color-3-500;\n    height: 60px;\n    cursor: default;\n    transition: all 500ms;\n    position: relative;\n    z-index: 2;\n    overflow: hidden;\n\n    &:focus {\n      outline-width: 0; }\n\n    &:active {\n      background-color: $color-3-100;\n      .pxl-bottombar__item__icon {\n        svg:nth-child(2) {\n          @include visible(true); } } }\n\n    &.active {\n      .pxl-bottombar__item__icon {\n        transform: translateY(-10px);\n        svg.icon-filled {\n            @include visible(true); } }\n\n      .pxl-bottombar__item__notifier {\n        transform: translateY(-7px) translateX(-50%);\n        @include visible(false); }\n\n      .pxl-bottombar__item__label {\n        transform: none;\n        @include visible(true); } }\n\n    &__icon {\n      position: relative;\n      size: $bottombar-icon-size;\n      transition: all 500ms;\n\n      svg {\n        size: 100%;\n        fill: currentColor;\n        position: absolute;\n        top: 0;\n        left: 0;\n        transition: all 500ms;\n\n        &.icon-filled {\n          @include visible(false); } } }\n\n    &__notifier {\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      background-color: $color-1-500;\n      width: 5px;\n      height: 5px;\n      position: absolute;\n      z-index: 1;\n      top: -5px;\n      right: -5px;\n      font-size: 0;\n      color: $white;\n      border-radius: 50%;\n      transition: all 500ms; }\n\n    &__counter {\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      background-color: $color-1-500;\n      border: 2px solid $white;\n      width: 16px;\n      height: 16px;\n      text-align: center;\n      position: absolute;\n      z-index: 1;\n      bottom: -8px;\n      left: 50%;\n      transform: translateX(-50%);\n      font-size: $pixel-12;\n      color: $white;\n      border-radius: 50%; }\n\n    &__label {\n      font-size: $pixel-12;\n      margin-top: 5px;\n      font-weight: 500;\n      transform: translateY(7px);\n      line-height: 1;\n      position: absolute;\n      bottom: 7px;\n      left: 0;\n      right: 0;\n      transition: all 500ms;\n      @include visible(false); } } }\n","@charset \"UTF-8\";\r\n\r\n//     _            _           _                           _ _\r\n//    (_)          | |         | |                         | (_)\r\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\r\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\r\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\r\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\r\n//\r\n//      Simple, elegant and maintainable media queries in Sass\r\n//                        v1.4.9\r\n//\r\n//        https://eduardoboucas.github.io/include-media\r\n//\r\n//         Authors: Eduardo Boucas (@eduardoboucas)\r\n//                  Hugo Giraudel (@hugogiraudel)\r\n//\r\n//      This project is licensed under the terms of the MIT license\r\n////\r\n/// include-media library public configuration\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n///\r\n/// Creates a list of global breakpoints\r\n///\r\n/// @example scss - Creates a single breakpoint with the label `phone`\r\n///  $breakpoints: ('phone': 320px);\r\n///\r\n$breakpoints: (\r\n  'phone': 320px,\r\n  'tablet': 768px,\r\n  'desktop': 1024px\r\n) !default;\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\r\n///  );\r\n///\r\n$media-expressions: (\r\n  'screen': 'screen',\r\n  'print': 'print',\r\n  'handheld': 'handheld',\r\n  'landscape': '(orientation: landscape)',\r\n  'portrait': '(orientation: portrait)',\r\n  'retina2x':\r\n    '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\r\n  'retina3x':\r\n    '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\r\n) !default;\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media('>128px') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media('>20em') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media('>2.0rem') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n  'px': 1,\r\n  'em': 0.01,\r\n  'rem': 0.1,\r\n  '': 0\r\n) !default;\r\n\r\n///\r\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\r\n/// for browsers that don't support media queries.\r\n///\r\n/// @example scss - Disables support for media queries\r\n///  $im-media-support: false;\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n$im-media-support: true !default;\r\n\r\n///\r\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\r\n/// intercept the breakpoint will be displayed, any others will be ignored.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'tablet';\r\n///  @include media('>=desktop') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-breakpoint: 'desktop' !default;\r\n\r\n///\r\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\r\n/// are not supported.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'screen') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///   /* Generates: */\r\n///   .foo {\r\n///     color: tomato;\r\n///   }\r\n///\r\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'retina2x') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\r\n\r\n////\r\n/// Cross-engine logging engine\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n///\r\n/// Log a message either with `@error` if supported\r\n/// else with `@warn`, using `feature-exists('at-error')`\r\n/// to detect support.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@function im-log($message) {\r\n  @if feature-exists('at-error') {\r\n    @error $message;\r\n  } @else {\r\n    @warn $message;\r\n    $_: noop();\r\n  }\r\n\r\n  @return $message;\r\n}\r\n\r\n///\r\n/// Wrapper mixin for the log function so it can be used with a more friendly\r\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\r\n/// within functions because it is not possible to include a mixin in a function\r\n/// and use the mixin everywhere else because it's much more elegant.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@mixin log($message) {\r\n  @if im-log($message) {\r\n  }\r\n}\r\n\r\n///\r\n/// Function with no `@return` called next to `@warn` in Sass 3.3\r\n/// to trigger a compiling error and stop the process.\r\n///\r\n@function noop() {\r\n}\r\n\r\n///\r\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\r\n///\r\n@function im-intercepts-static-breakpoint($conditions...) {\r\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\r\n\r\n  @if not $no-media-breakpoint-value {\r\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {\r\n    }\r\n  }\r\n\r\n  @each $condition in $conditions {\r\n    @if not map-has-key($media-expressions, $condition) {\r\n      $operator: get-expression-operator($condition);\r\n      $prefix: get-expression-prefix($operator);\r\n      $value: get-expression-value($condition, $operator);\r\n\r\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\r\n        ($prefix == 'min' and $value > $no-media-breakpoint-value)\r\n      {\r\n        @return false;\r\n      }\r\n    } @else if not index($im-no-media-expressions, $condition) {\r\n      @return false;\r\n    }\r\n  }\r\n\r\n  @return true;\r\n}\r\n\r\n////\r\n/// Parsing engine\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n///\r\n/// Get operator of an expression\r\n///\r\n/// @param {String} $expression - Expression to extract operator from\r\n///\r\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\r\n///\r\n@function get-expression-operator($expression) {\r\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\r\n    @if str-index($expression, $operator) {\r\n      @return $operator;\r\n    }\r\n  }\r\n\r\n  // It is not possible to include a mixin inside a function, so we have to\r\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n  // functions cannot be called anywhere in Sass, we need to hack the call in\r\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n  $_: im-log('No operator found in `#{$expression}`.');\r\n}\r\n\r\n///\r\n/// Get dimension of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract dimension from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {String} - `width` or `height` (or potentially anything else)\r\n///\r\n@function get-expression-dimension($expression, $operator) {\r\n  $operator-index: str-index($expression, $operator);\r\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\r\n  $dimension: 'width';\r\n\r\n  @if str-length($parsed-dimension) > 0 {\r\n    $dimension: $parsed-dimension;\r\n  }\r\n\r\n  @return $dimension;\r\n}\r\n\r\n///\r\n/// Get dimension prefix based on an operator\r\n///\r\n/// @param {String} $operator - Operator\r\n///\r\n/// @return {String} - `min` or `max`\r\n///\r\n@function get-expression-prefix($operator) {\r\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\r\n}\r\n\r\n///\r\n/// Get value of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract value from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {Number} - A numeric value\r\n///\r\n@function get-expression-value($expression, $operator) {\r\n  $operator-index: str-index($expression, $operator);\r\n  $value: str-slice($expression, $operator-index + str-length($operator));\r\n\r\n  @if map-has-key($breakpoints, $value) {\r\n    $value: map-get($breakpoints, $value);\r\n  } @else {\r\n    $value: to-number($value);\r\n  }\r\n\r\n  $interval: map-get($unit-intervals, unit($value));\r\n\r\n  @if not $interval {\r\n    // It is not possible to include a mixin inside a function, so we have to\r\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n    // functions cannot be called anywhere in Sass, we need to hack the call in\r\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n    $_: im-log('Unknown unit `#{unit($value)}`.');\r\n  }\r\n\r\n  @if $operator == '>' {\r\n    $value: $value + $interval;\r\n  } @else if $operator == '<' {\r\n    $value: $value - $interval;\r\n  }\r\n\r\n  @return $value;\r\n}\r\n\r\n///\r\n/// Parse an expression to return a valid media-query expression\r\n///\r\n/// @param {String} $expression - Expression to parse\r\n///\r\n/// @return {String} - Valid media query\r\n///\r\n@function parse-expression($expression) {\r\n  // If it is part of $media-expressions, it has no operator\r\n  // then there is no need to go any further, just return the value\r\n  @if map-has-key($media-expressions, $expression) {\r\n    @return map-get($media-expressions, $expression);\r\n  }\r\n\r\n  $operator: get-expression-operator($expression);\r\n  $dimension: get-expression-dimension($expression, $operator);\r\n  $prefix: get-expression-prefix($operator);\r\n  $value: get-expression-value($expression, $operator);\r\n\r\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\r\n}\r\n\r\n///\r\n/// Slice `$list` between `$start` and `$end` indexes\r\n///\r\n/// @access private\r\n///\r\n/// @param {List} $list - List to slice\r\n/// @param {Number} $start [1] - Start index\r\n/// @param {Number} $end [length($list)] - End index\r\n///\r\n/// @return {List} Sliced list\r\n///\r\n@function slice($list, $start: 1, $end: length($list)) {\r\n  @if length($list) < 1 or $start > $end {\r\n    @return ();\r\n  }\r\n\r\n  $result: ();\r\n\r\n  @for $i from $start through $end {\r\n    $result: append($result, nth($list, $i));\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n////\r\n/// String to number converter\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n///\r\n/// Casts a string into a number\r\n///\r\n/// @param {String | Number} $value - Value to be parsed\r\n///\r\n/// @return {Number}\r\n///\r\n@function to-number($value) {\r\n  @if type-of($value) == 'number' {\r\n    @return $value;\r\n  } @else if type-of($value) != 'string' {\r\n    $_: im-log('Value for `to-number` should be a number or a string.');\r\n  }\r\n\r\n  $first-character: str-slice($value, 1, 1);\r\n  $result: 0;\r\n  $digits: 0;\r\n  $minus: ($first-character == '-');\r\n  $numbers: (\r\n    '0': 0,\r\n    '1': 1,\r\n    '2': 2,\r\n    '3': 3,\r\n    '4': 4,\r\n    '5': 5,\r\n    '6': 6,\r\n    '7': 7,\r\n    '8': 8,\r\n    '9': 9\r\n  );\r\n\r\n  // Remove +/- sign if present at first character\r\n  @if ($first-character == '+' or $first-character == '-') {\r\n    $value: str-slice($value, 2);\r\n  }\r\n\r\n  @for $i from 1 through str-length($value) {\r\n    $character: str-slice($value, $i, $i);\r\n\r\n    @if not(index(map-keys($numbers), $character) or $character == '.') {\r\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i));\r\n    }\r\n\r\n    @if $character == '.' {\r\n      $digits: 1;\r\n    } @else if $digits == 0 {\r\n      $result: $result * 10 + map-get($numbers, $character);\r\n    } @else {\r\n      $digits: $digits * 10;\r\n      $result: $result + map-get($numbers, $character) / $digits;\r\n    }\r\n  }\r\n\r\n  @return if($minus, -$result, $result);\r\n}\r\n\r\n///\r\n/// Add `$unit` to `$value`\r\n///\r\n/// @param {Number} $value - Value to add unit to\r\n/// @param {String} $unit - String representation of the unit\r\n///\r\n/// @return {Number} - `$value` expressed in `$unit`\r\n///\r\n@function to-length($value, $unit) {\r\n  $units: (\r\n    'px': 1px,\r\n    'cm': 1cm,\r\n    'mm': 1mm,\r\n    '%': 1%,\r\n    'ch': 1ch,\r\n    'pc': 1pc,\r\n    'in': 1in,\r\n    'em': 1em,\r\n    'rem': 1rem,\r\n    'pt': 1pt,\r\n    'ex': 1ex,\r\n    'vw': 1vw,\r\n    'vh': 1vh,\r\n    'vmin': 1vmin,\r\n    'vmax': 1vmax\r\n  );\r\n\r\n  @if not index(map-keys($units), $unit) {\r\n    $_: im-log('Invalid unit `#{$unit}`.');\r\n  }\r\n\r\n  @return $value * map-get($units, $unit);\r\n}\r\n\r\n///\r\n/// This mixin aims at redefining the configuration just for the scope of\r\n/// the call. It is helpful when having a component needing an extended\r\n/// configuration such as custom breakpoints (referred to as tweakpoints)\r\n/// for instance.\r\n///\r\n/// @author Hugo Giraudel\r\n///\r\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\r\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\r\n///\r\n/// @example scss - Extend the global breakpoints with a tweakpoint\r\n///  @include media-context(('custom': 678px)) {\r\n///    .foo {\r\n///      @include media('>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend the global media expressions with a custom one\r\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend both configuration maps\r\n///  @include media-context(('custom': 678px), ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\r\n  // Save global configuration\r\n  $global-breakpoints: $breakpoints;\r\n  $global-media-expressions: $media-expressions;\r\n\r\n  // Update global configuration\r\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\r\n  $media-expressions: map-merge(\r\n    $media-expressions,\r\n    $tweak-media-expressions\r\n  ) !global;\r\n\r\n  @content;\r\n\r\n  // Restore global configuration\r\n  $breakpoints: $global-breakpoints !global;\r\n  $media-expressions: $global-media-expressions !global;\r\n}\r\n\r\n////\r\n/// include-media public exposed API\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media('>phone') { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media('>phone', '<=tablet') { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media('>=358px', '<850px') { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media('>desktop', '<=1350px') { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media('retina2x') { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media('>=350px', '<tablet', 'retina3x') { }\r\n///\r\n@mixin media($conditions...) {\r\n  @if ($im-media-support and length($conditions) == 0) or\r\n    (not $im-media-support and im-intercepts-static-breakpoint($conditions...))\r\n  {\r\n    @content;\r\n  } @else if ($im-media-support and length($conditions) > 0) {\r\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\r\n      // Recursive call\r\n      @include media(slice($conditions, 2) ...) {\r\n        @content;\r\n      }\r\n    }\r\n  }\r\n}\r\n","@mixin center($type: 'position', $plane: null) {\n  @if $type == 'position' {\n    @if $plane == 'x' {\n      position: absolute;\n      left: 50%;\n      transform: translateX(-50%); }\n    @else if $plane == 'y' {\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%); }\n    @else {\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%); } }\n\n  @else if $type == 'flex' {\n    @if $plane == 'x' {\n      display: flex;\n      justify-content: center; }\n    @else if $plane == 'y' {\n      display: flex;\n      align-items: center; }\n    @else {\n      display: flex;\n      align-items: center;\n      justify-content: center; } }\n\n  @else if $type == 'inline-flex' {\n    @if $plane == 'x' {\n      display: inline-flex;\n      justify-content: center; }\n    @else if $plane == 'y' {\n      display: inline-flex;\n      align-items: center; }\n    @else {\n      display: inline-flex;\n      align-items: center;\n      justify-content: center; } }\n\n  @else if $type == 'block' {\n    display: block;\n    margin: null auto; } }\n\n\n@mixin circle($size, $color) {\n  size: $size;\n  border-radius: 50%;\n  background-color: $color; }\n\n\n@mixin visible($visibility) {\n  opacity: if($visibility, 1, 0);\n  visibility: if($visibility, unquote('visible'), unquote('hidden')); }\n\n\n@mixin clearfix {\n  &::after {\n    content: '';\n    display: table;\n    clear: both; } }\n\n\n@mixin reset-list {\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n\n  li {\n    list-style-type: none;\n    list-style-position: inside;\n    list-style-image: none; } }\n\n\n@mixin text-stroke($size, $color, $smooth: 0) {\n  text-shadow: -#{$size} -#{$size} $smooth $color, -#{$size} 0 $smooth $color, -#{$size} $size $smooth $color, 0 -#{$size} $smooth $color, 0 0 $smooth $color, 0 $size $smooth $color, $size -#{$size} $smooth $color, $size 0 $smooth $color, $size $size $smooth $color; }\n\n\n@mixin sticky-footer($height, $wrapper: body) {\n  @at-root #{$wrapper} {\n    margin-bottom: $height; }\n\n  & {\n    position: absolute null null 0 0;\n    size: 100% $height; } }\n\n\n@mixin reflect($axis) {\n  @if $axis == 'vertical' {\n    transform: rotateY(180deg); }\n  @else if $axis == 'horizontal' {\n    transform: rotateY(180deg); } }\n",".pxl-tabbar {\n\n  &-triggers {\n    display: flex;\n    align-items: center; }\n\n  &-trigger {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    height: 60px;\n    flex-grow: 1;\n    border-width: 0;\n    transition: all 500ms;\n\n    &:focus {\n      outline-width: 0; }\n\n    &:hover {\n      background-color: $color-3-500;\n\n      .pxl-tabbar-trigger-icon {\n        color: $white;\n\n        .icon-normal {\n          @include visible(false); }\n        .icon-filled {\n          @include visible(true); } } }\n\n    &-icon {\n      position: relative;\n      width: 25px;\n      height: 25px;\n      color: $color-3-500;\n\n      > svg {\n        width: 100%;\n        height: 100%;\n        fill: currentColor;\n        position: absolute;\n        top: 0;\n        left: 0;\n        transition: all 500ms;\n\n        .icon-filled {\n          @include visible(false); } } } } }\n",".pxl-drawer {\n  transition: all 500ms 500ms;\n\n  &.is-active-layer {\n    transition: all 500ms;\n\n    .pxl-drawer__container {\n      transform: translateX(0);\n      transition: all 500ms 500ms ease-in-out; } }\n\n  &__body {\n    display: flex;\n    justify-content: flex-start;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    min-height: 100%;\n    overflow-x: hidden; }\n\n  &__away {\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    size: 100%;\n    z-index: 1;\n    background-image: linear-gradient(to bottom, #8E2DE2, #4A00E0);\n    opacity: .5; }\n\n  &__container {\n    position: relative;\n    z-index: 2;\n    background-color: $white;\n    width: 320px;\n    color: $gray-600;\n    padding: 15px;\n    transform: translateX(-100%);\n    transition: all 500ms ease-in-out;\n    box-shadow: 15px 0 30px 0 rgba($black, .75); } }\n",".pxl-modal {\n  transition: all 500ms;\n\n  &.pxl-layer--active,\n  &.pxl-layer--behind {\n    .pxl-modal__container {\n      transform: translateY(0); } }\n\n  &__body {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 30px;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    min-height: 100%; }\n\n  &__away {\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    size: 100%;\n    z-index: 1;\n    background-image: linear-gradient(to bottom, #8E2DE2, #4A00E0);\n    opacity: .15; }\n\n  &__container {\n    position: relative;\n    z-index: 2;\n    background-color: $white;\n    width: 600px;\n    color: $gray-600;\n    padding: 15px;\n    transform: translateY(-100%);\n    transition: all 500ms; } }\n","section.main-layer {\n  transition: all 350ms; }\n",".container {\n  width: 100%;\n  max-width: 1140px;\n  margin: null auto;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  grid-template-rows: 250px;\n  grid-gap: 30px;\n  height: 600px; }\n\n.box {\n  background-color: bisque;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 36px;\n  font-weight: 600;\n\n  &:nth-child(odd) {\n    background-color: blue;\n    color: #fff; } }\n\n.button {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  appearance: none;\n  background-color: $white;\n  color: $color-3;\n  border: 2px solid $color-3;\n  padding: 10px;\n  line-height: 1;\n  font-size: 16px;\n  margin: 10px;\n  font-weight: 600;\n  cursor: pointer;\n\n  &:hover {\n    background-color: $color-3-100; }\n\n  &:focus {\n    background-color: $color-3-200;\n    color: $color-3-500;\n    outline-width: 0; }\n\n  svg {\n    margin-right: 7px;\n    fill: currentColor; } }\n\n.deneme {\n  padding: 50px 75px null;\n  margin: lookup('padding');\n  @include center(); }\n\n\n.choose {\n  color: red;\n  background-repeat: no-repeat; }\n\n.boxes {\n  display: flex;\n  align-items: center;\n  padding: 30px;\n\n  .box {\n    width: 50px;\n    height: 50px; }\n\n  .black-box {\n    &-1 {\n      background-color: $gray-100; }\n    &-2 {\n      background-color: $gray-200; }\n    &-3 {\n      background-color: $gray-300; }\n    &-4 {\n      background-color: $gray-400; }\n    &-5 {\n      background-color: $gray-500; }\n    &-6 {\n      background-color: $gray-600; }\n    &-7 {\n      background-color: $gray-700; }\n    &-8 {\n      background-color: $gray-800; }\n    &-9 {\n      background-color: $gray-900; }\n    &-10 {\n      background-color: $black; } }\n\n  .color-1-box {\n    &-1 {\n      background-color: $color-1-100; }\n    &-2 {\n      background-color: $color-1-200; }\n    &-3 {\n      background-color: $color-1-300; }\n    &-4 {\n      background-color: $color-1-400; }\n    &-5 {\n      background-color: $color-1-500; }\n    &-6 {\n      background-color: $color-1-600; }\n    &-7 {\n      background-color: $color-1-700; }\n    &-8 {\n      background-color: $color-1-800; }\n    &-9 {\n      background-color: $color-1-900; }\n    &-10 {\n      background-color: $color-1; } }\n\n  .color-2-box {\n    &-1 {\n      background-color: $color-2-100; }\n    &-2 {\n      background-color: $color-2-200; }\n    &-3 {\n      background-color: $color-2-300; }\n    &-4 {\n      background-color: $color-2-400; }\n    &-5 {\n      background-color: $color-2-500; }\n    &-6 {\n      background-color: $color-2-600; }\n    &-7 {\n      background-color: $color-2-700; }\n    &-8 {\n      background-color: $color-2-800; }\n    &-9 {\n      background-color: $color-2-900; }\n    &-10 {\n      background-color: $color-2; } }\n\n  .color-3-box {\n    &-1 {\n      background-color: $color-3-100; }\n    &-2 {\n      background-color: $color-3-200; }\n    &-3 {\n      background-color: $color-3-300; }\n    &-4 {\n      background-color: $color-3-400; }\n    &-5 {\n      background-color: $color-3-500; }\n    &-6 {\n      background-color: $color-3-600; }\n    &-7 {\n      background-color: $color-3-700; }\n    &-8 {\n      background-color: $color-3-800; }\n    &-9 {\n      background-color: $color-3-900; }\n    &-10 {\n      background-color: $color-3; } } }\n"]}